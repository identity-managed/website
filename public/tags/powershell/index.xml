<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShell on Identity Managed</title>
    <link>https://identitymanaged.com/tags/powershell/</link>
    <description>Recent content in PowerShell on Identity Managed</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 31 Mar 2017 20:09:00 -0700</lastBuildDate>
    <atom:link href="https://identitymanaged.com/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Open Source: Review of MIMTools</title>
      <link>https://identitymanaged.com/2017/03/open-source-review-of-mimtools.html</link>
      <pubDate>Fri, 31 Mar 2017 20:09:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2017/03/open-source-review-of-mimtools.html</guid>
      <description>JefTek created a niche hybrid tool that tackles a few pieces of the sync and service puzzle in a way that none of the others do.
One noteable one for sync:
Get and Export MIM Deltas to CSV (based on a drop file either stop and drop or the audit log dropped during the export
It is great for setting up SharePoint and the Kerberos authentication to it.
While it doesn&amp;rsquo;t do all that IS4U-FIM-PowerShell (see my review), does or Lithnext resourcemanagement-powershell or Lithnet-miis-powershell (see my review), or even the he FIM PowerShell Module (see my review), it fills a small niche that none of the rest of them do.</description>
    </item>
    <item>
      <title>Open Source: Review of FIM 2010 PowerShell Cmdlets</title>
      <link>https://identitymanaged.com/2017/03/open-source-review-of-fim-2010.html</link>
      <pubDate>Fri, 31 Mar 2017 20:00:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2017/03/open-source-review-of-fim-2010.html</guid>
      <description>Gil Kirkpatrick (a great guy, fellow MVP, who has taught me a lot over the years) created one of the very first, if not the first, PowerShell commandlets libraries to manage FIM/MIM service. It hasn&amp;rsquo;t had any activity in years, but it served as a great example to get others going.
If you like this simple approach you could check out Adam Weigert&amp;rsquo;s PowerShell for FIM 2010 (see my review).</description>
    </item>
    <item>
      <title>Open Source: Review of IS4U-FIM-PowerShell</title>
      <link>https://identitymanaged.com/2017/03/open-source-review-of-is4u-fim.html</link>
      <pubDate>Fri, 31 Mar 2017 19:52:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2017/03/open-source-review-of-is4u-fim.html</guid>
      <description>Wim Beck&amp;rsquo;s IS4U-FIM-PowerShell is a great example of open source, in that he has built on top of the FIM PowerShell Module (see my review). This is what Open Source is about, building upon each other&amp;rsquo;s contributions to make great stuff!
When I looked at it in Dec 2016 I almost dismissed it since it lacked a wiki, but since then Wim has added a lot of pages. They still lack examples, I plan on pitching in to help out with that by adding some examples to my fork and then asking Wim to pull it in.</description>
    </item>
    <item>
      <title>Open Source: Review of Lithnet</title>
      <link>https://identitymanaged.com/2017/03/open-source-review-of-lithnet.html</link>
      <pubDate>Fri, 31 Mar 2017 19:35:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2017/03/open-source-review-of-lithnet.html</guid>
      <description>Ryan Newington&amp;rsquo;s Lithnet consists of several items:
miis-powershell
resourcemanagement-powershell
resourcemanagement-webservice
googleapps-managementagent
acma
&amp;ldquo;Codeless business rules engine for FIM/MIM&amp;rdquo;
umare
&amp;ldquo;Codeless data transform engine for FIM/MIM&amp;rdquo;
I will only review the items I know
Managing Sync
miis-powershell is amazing it can almost everything you can do through the UI. For example, Clear-FullSyncWarning and it has a great wiki. Gotta have it!
It wraps WMI calls, existing PowerShell modules, executables and sync client UI to interact with FIM/MIM Sync.</description>
    </item>
    <item>
      <title>Open Source: Review of PowerShell for FIM 2010</title>
      <link>https://identitymanaged.com/2017/03/open-source-review-of-powershell-for.html</link>
      <pubDate>Fri, 31 Mar 2017 19:15:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2017/03/open-source-review-of-powershell-for.html</guid>
      <description>PowerShell for FIM 2010 by Adam Weigert consists of three parts but I further break the last into two:
Management Agent(MA) and MetaVerse (MV) Extensions that let you run PowerShell scripts as your extensions
A Workflow Activity
A PowerShell module
Managing Sync
Managing Service
Management Agent(MA) and MetaVerse (MV) Extensions
The work done to enable you to write PowerShell scripts to be MA and MV extensions is crazy brilliant. However, I suspect (I haven&amp;rsquo;t tested) that large installations should shy away from this as compiled C# and VB.</description>
    </item>
    <item>
      <title>Open Source: Review of FIM PowerShell Module</title>
      <link>https://identitymanaged.com/2017/03/open-source-review-of-fim-powershell.html</link>
      <pubDate>Fri, 31 Mar 2017 18:52:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2017/03/open-source-review-of-fim-powershell.html</guid>
      <description>The FIM PowerShell Module (started by Craig Martin and now updated most frequently by Brian Desmond) is a great set of commandlets that help you to automate Interactions with FIM Service and FIM Sync Service.
Managing Sync
This library is great for automating tests. This library and Ryan Newington&amp;rsquo;s Lithnet-Miis-PowerShell (see my review on LithNet) are very complimentary. You can retrieve CS Objects, Run History, start an MA.
I found that the most interesting Sync related Cmdlets are the</description>
    </item>
    <item>
      <title>What AD Attributes are indexed? ANR? Tuple? PowerShell</title>
      <link>https://identitymanaged.com/2014/12/what-ad-attributes-are-indexed-anr.html</link>
      <pubDate>Thu, 04 Dec 2014 11:50:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2014/12/what-ad-attributes-are-indexed-anr.html</guid>
      <description>Import-Module ActiveDirectory
Write-Host &amp;ldquo;Tuple Index Enabled Attributes&amp;rdquo;
Get-ADObject -SearchBase ((Get-ADRootDSE).schemaNamingContext) -SearchScope OneLevel -LDAPFilter &amp;ldquo;(searchFlags:1.2.840.113556.1.4.803:=32)&amp;rdquo; -Property objectClass, name, whenChanged, whenCreated, LDAPDisplayNAme | Out-GridView
Write-Host &amp;ldquo;ANR Enabled Attributes&amp;rdquo;
Get-ADObject -SearchBase ((Get-ADRootDSE).schemaNamingContext) -SearchScope OneLevel -LDAPFilter &amp;ldquo;(searchFlags:1.2.840.113556.1.4.803:=4)&amp;rdquo; -Property objectClass, name, whenChanged, whenCreated, LDAPDisplayNAme | Out-GridView
Write-Host &amp;ldquo;Indexed Enabled Attributes&amp;rdquo;
Get-ADObject -SearchBase ((Get-ADRootDSE).schemaNamingContext) -SearchScope OneLevel -LDAPFilter &amp;ldquo;(searchFlags:1.2.840.113556.1.4.803:=1)&amp;rdquo; -Property objectClass, name, whenChanged, whenCreated, LDAPDisplayNAme | Out-GridView
The above script is something I use to quickly look and see what is indexed in an AD environment</description>
    </item>
    <item>
      <title>Happy Independence Day -- Using PowerShell for Reporting</title>
      <link>https://identitymanaged.com/2014/07/happy-independence-day-using-powershell.html</link>
      <pubDate>Fri, 04 Jul 2014 15:06:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2014/07/happy-independence-day-using-powershell.html</guid>
      <description>Unfortunately, my Independence day is not free &amp;ndash; I am working. Just so happens I need to report on when computer objects are getting migrated to a new AD forest. Day 1 4 Day 2 30 Day 3 25 etc.
Now I could have taken the data and imported it into SQL and then busted out some awesome queries in no time flat. But my buddy Craig Martin, keeps insisting how awesome this PowerShell stuff is.</description>
    </item>
    <item>
      <title>Property Sets for Permissions in AD and AD LDS</title>
      <link>https://identitymanaged.com/2011/12/property-sets-for-permissions-in-ad-and.html</link>
      <pubDate>Mon, 26 Dec 2011 12:46:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2011/12/property-sets-for-permissions-in-ad-and.html</guid>
      <description>It’s very good post! Congratulations! I really enj&amp;hellip; Unknown - Jul 4, 2013
It’s very good post! Congratulations! I really enjoyed to reading your blog. Thanks for share all this information. I’m looking forward your next post</description>
    </item>
    <item>
      <title>Property Sets for Permissions in AD and AD LDS</title>
      <link>https://identitymanaged.com/2011/12/property-sets-for-permissions-in-ad-and.html</link>
      <pubDate>Mon, 26 Dec 2011 12:46:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2011/12/property-sets-for-permissions-in-ad-and.html</guid>
      <description>A while back I needed to set up Property Sets in AD LDS for granting of permissions to many of the attributes on the person object all at once, as I reviewed the Technet documentation on AD Property Sets I realized that it doesn’t tell you what object type property sets are, nor does it tell you how to create a property set, nor does it tell you how to assign an attribute to a property set.</description>
    </item>
    <item>
      <title>GUIDs to Octets, GUIDs to Base64 strings and back again</title>
      <link>https://identitymanaged.com/2011/12/guids-to-octets-guids-to-base64-strings.html</link>
      <pubDate>Mon, 26 Dec 2011 12:45:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2011/12/guids-to-octets-guids-to-base64-strings.html</guid>
      <description>not sure if anyone is still looking at this but i &amp;hellip; Unknown - Jan 6, 2015
not sure if anyone is still looking at this but i have a question that seems simple but its puzzling me!
I am trying to follow the instructions to convert a GUID into a string. I have done this:
Which you can do with this one line of PowerShell script
[System.String]::Join(&amp;rsquo;&amp;rsquo;,(( new-object system.guid(&amp;lsquo;8c4ac332-975f-4717-ad7b-ba4a4e968fff&amp;rsquo;) ).</description>
    </item>
    <item>
      <title>GUIDs to Octets, GUIDs to Base64 strings and back again</title>
      <link>https://identitymanaged.com/2011/12/guids-to-octets-guids-to-base64-strings.html</link>
      <pubDate>Mon, 26 Dec 2011 12:45:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2011/12/guids-to-octets-guids-to-base64-strings.html</guid>
      <description>Suppose I generate a GUID of 8c4ac332-975f-4717-ad7b-ba4a4e968fff by running the following PowerShell Command line
[system.guid]::newguid()
Don’t worry if your GUID is different from mine; it should be! If it isn’t let me know because I think I’ll partner with you for the lottery (aka a tax on the mathematically impaired).
Some attributes (like the attributeSecurityGUID) when edited through ADSI Edit require you to convert the GUID to octet string (for little endian systems – Intel processors are little endian): 32c34a8c5f971747ad7bba4a4e968fff</description>
    </item>
    <item>
      <title>Behind the scenes of RoomResources–Custom Properties</title>
      <link>https://identitymanaged.com/2011/05/behind-scenes-of-roomresourcescustom.html</link>
      <pubDate>Mon, 16 May 2011 22:26:00 -0700</pubDate>
      <guid>https://identitymanaged.com/2011/05/behind-scenes-of-roomresourcescustom.html</guid>
      <description>While using FIM and PowerShell to manage Exchange 2010 I was following along a wonderful article on resource mailboxes that left me wondering a few things.
Exactly how is the data stored in the msExchResourceDisplay and msExchResourceSearchProperties attributes?
How is it stored with multiple custom properties?
Is manipulating those AD attributes sufficient or is PowerShell storing something in the Exchange Data store?
Here are the answers:
msExchResourceDisplay = “Room,FlatScreenTV” It appears to be a single valued string with commas.</description>
    </item>
  </channel>
</rss>
